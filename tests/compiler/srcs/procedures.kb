//proc foo() {
//    var a := 3.14;
//    var b := 3.0;
//    var c := a + b;
//    if c > 3.0 {
//        return;
//    }
//    var d := a + b * 2;
//}
//
//foo();

proc add(a: int, b: int) -> int {
    var res := a + b;
    return res;
}

var a_num := add(1, 2);
//a_num;


proc double(a: int) -> int {
    return add(a, a);
}

var b_num := double(a_num);
b_num;
//var b_num := 6;

// TODO: add keyword for reference passing?
//proc add_1(a: int) {
//    a = a + 1;
//}
//
//add_1(b_num);
//b_num;

// TODO: Create way to handle recursive procedures; `rec` keyword?
//rec proc fib(n: int) -> int {
//    if n <= 1 {
//        return 1;
//    }
//    return rec_fib(n - 1_ + rec_fib(n - 2);
//}
//proc rec_fib(n: int) -> int {
//    if n <= 1 {
//        return 1;
//    }
//
//    return rec_fib(n - 1) + rec_fib(n - 2);
//}

//var fib_twenty := rec_fib(20);
//fib_twenty;
